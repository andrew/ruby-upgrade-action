name: "Ruby Upgrade Action"
description: "Automatically upgrade Ruby version in .ruby-version, Gemfile, Dockerfile, and GitHub Actions workflows."
author: "Andrew Nesbitt"
branding:
  icon: "refresh-ccw"
  color: "red"

inputs:
  target-ruby-version:
    description: 'Target Ruby version to upgrade to (e.g., 3.3.0). If not specified, latest stable version will be used'
    required: false
  github-token:
    description: 'GitHub token for creating pull requests'
    required: true
    default: ${{ github.token }}
  branch-name:
    description: 'Name of the branch to create for the upgrade'
    required: false
    default: 'ruby-version-upgrade'

runs:
  using: composite
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Determine target Ruby version
      shell: bash
      run: |
        if [ -n "${{ inputs.target-ruby-version }}" ]; then
          echo "TARGET_RUBY_VERSION=${{ inputs.target-ruby-version }}" >> $GITHUB_ENV
        else
          LATEST_RUBY=$(curl -s https://api.github.com/repos/ruby/ruby/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/' | tr '_' '.')
          echo "TARGET_RUBY_VERSION=$LATEST_RUBY" >> $GITHUB_ENV
        fi

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.TARGET_RUBY_VERSION }}

    - name: Create upgrade branch
      shell: bash
      run: |
        git checkout -b ${{ inputs.branch-name }}

    - name: Update Ruby versions
      shell: bash
      run: |
        if [ -f .ruby-version ]; then
          echo "${{ env.TARGET_RUBY_VERSION }}" > .ruby-version
          echo "Updated .ruby-version file"
        fi

        if [ -f Gemfile ]; then
          # Update Gemfile Ruby version
          sed -i.bak "s/^ruby [\"'][^\"']*[\"']/ruby '${{ env.TARGET_RUBY_VERSION }}'/" Gemfile
          rm Gemfile.bak
          
          # Now run bundle update
          bundle update --ruby
          echo "Updated Gemfile and dependencies"
        fi

        if [ -f Dockerfile ]; then
          sed -i.bak "s/FROM ruby:[0-9.]*\(-.*\)\?/FROM ruby:${{ env.TARGET_RUBY_VERSION }}\1/" Dockerfile
          rm Dockerfile.bak
          echo "Updated Dockerfile"
        fi

    - name: Check for changes
      shell: bash
      id: check_changes
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit changes
      if: steps.check_changes.outputs.has_changes == 'true'
      shell: bash
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        if git ls-remote --exit-code --heads origin "${{ inputs.branch-name }}"; then
          git push origin --delete "${{ inputs.branch-name }}"
        fi
        git fetch origin main
        git checkout origin/main -- .github/workflows
        git add .
        git commit -m "Update Ruby to version ${{ env.TARGET_RUBY_VERSION }}"
        git push origin ${{ inputs.branch-name }}

    - name: Create Pull Request
      if: steps.check_changes.outputs.has_changes == 'true'
      shell: bash
      run: |
        PR_BODY="This PR updates the Ruby version to ${{ env.TARGET_RUBY_VERSION }}.

        Changes made:
        - Updated .ruby-version file (if present)
        - Updated Gemfile ruby version (if present)
        - Updated Dockerfile ruby version (if present)
        - Updated Gemfile.lock dependencies

        Please review and test before merging.
        
        Powered by [Ruby Upgrade Action](https://github.com/andrew/ruby-upgrade-action/)"
        
        gh pr create \
          --title "Update Ruby to version ${{ env.TARGET_RUBY_VERSION }}" \
          --body "$PR_BODY" \
          --base main \
          --head ${{ inputs.branch-name }}
      env:
        GH_TOKEN: ${{ inputs.github-token }}